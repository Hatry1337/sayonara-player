image: "registry.gitlab.com/luciocarreras/sayonara-player:bionic"
stages:
  - build
  - test
  - packaging
  - deploy


# Build
build-sayonara:
  stage: build
  script: 
    - mkdir -p build && cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DWITH_TESTS=1 -DWITH_COTIRE=1 -DLINK_GSTREAMER_PLUGINS=1 -DCMAKE_PREFIX_PATH=/opt/qt
    - make -j`nproc`
    - make install DESTDIR=AppDir
  artifacts:
    untracked: true
    expire_in: 1 day
  only:
    - branches
    - tags


# Unit tests
test-sayonara:
  stage: test
  dependencies: 
    - build-sayonara
  variables:
    QT_QPA_PLATFORM: "offscreen"
  script:
    - cd build
    - make test
  artifacts:
    when: on_failure
    untracked: true
    expire_in: 2 days
  only:
    - branches
    - tags


# Fedora
## Package Fedora
package-fedora:
  image: "fedora:latest"
  stage: packaging
  script:
    - dnf --refresh --assumeyes makecache
    - dnf --assumeyes install git make cmake gcc-c++ desktop-file-utils libappstream-glib libnotify-devel qt5-qtbase-devel qt5-qttools-devel qt5-qtsvg-devel gstreamer1-plugins-base-devel taglib-devel zlib-devel hicolor-icon-theme auto-buildrequires
    - rm -rf build && mkdir build && cd build
    - cmake ..
    - cd ..
    - dist/fedora-rpm.sh ${CI_COMMIT_SHA} ./build/dist/sayonara.spec
  artifacts:
    paths:
      - /root/rpmbuild/RPMS
    expire_in: 1 week
  when: manual


# AppImage
## Package AppImage
package-appimage:
  stage: packaging
  dependencies:
    - build-sayonara
  script:
    - AppImage/appimage.sh deploy
  artifacts:
    paths:
      - build/*.AppImage
    expire_in: 1 week
  when: manual


# Snap
## Package Snap
package-snap:
  image: tschlaeppi/sayonara-snapcraft:core18
  stage: packaging
  tags:
    - luke-1
  variables:
    SNAPCRAFT_BUILD_ENVIRONMENT_MEMORY: 1G
  script:
    - apt-get update -qq
    - apt-get install -y -qq git
    - echo $(snapcraft --version)
    - ./snap/local/Set-SnapVersion.sh
    - snapcraft --destructive-mode
  artifacts:
    when: always
    paths:
      - ./*.snap
    expire_in: 1 week
  only:
    - master
    - tags
    - web


# Deploy Snap
deploy-snap:
  image: tschlaeppi/sayonara-snapcraft:core18
  stage: deploy
  dependencies:
    - package-snap
  tags:
    - luke-1
  variables:
    SNAPCRAFT_BUILD_ENVIRONMENT_MEMORY: 1G
  script:
    - echo $SNAPCRAFT_LOGIN | base64 --decode --ignore-garbage > snapcraft.login
    - snapcraft login --with snapcraft.login
    - snapcraft push *.snap --release edge
  only:
    - master
    - tags
    - web


# Languages
## Create ts file
package-language:
  stage: packaging
  script:
    - mkdir -p tx
    - /opt/qt/bin/lupdate -no-obsolete -no-sort -locations relative -source-language en -target-language en ./src -ts tx/sayonara_lang_en.ts
  artifacts:
    paths:
      - tx/sayonara_lang_en.ts
    expire_in: 2 days
  only:
    - branches
    - tags

## Upload ts to transifex
deploy-language:
  stage: deploy
  dependencies:
    - package-language
  script:
    - cd tx
    - export TX_TOKEN="$TX_API_KEY"
    - tx init --token="$TX_API_KEY" --force --no-interactive
    - tx config mapping -r sayonara-player.sayonara_lang_en -l en -t QT -s en -f sayonara_lang_en.ts --execute "sayonara_lang_<lang>.ts"
    - tx push -s
  artifacts:
    paths:
      - tx/*.ts
    expire_in: 2 days
  only:
    - master
    - tags
